{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sortByAlhpabet","ALPHABET","sortByLength","LENGTH","reset","this","resetHidden","sortedGoods","goods","visibleGoods","sort","g1","g2","localeCompare","length","console","log","getReorderedGoods","className","onClick","type","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,mBAAC,eACVA,GADS,IAEZC,YAAaD,EAAMC,iBATzB,EAaEK,eAAiB,WACf,EAAKD,SAAS,CACZH,SAAUL,EAASU,YAfzB,EAmBEC,aAAe,WACb,EAAKH,SAAS,CACZH,SAAUL,EAASY,UArBzB,EAyBEC,MAAQ,WACN,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QA5BzB,4CAgCE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAcX,GAAcC,IAAaL,EAASM,KAClDU,EAjEH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNc,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQhB,GACN,KAAKL,EAASU,SACZ,OAAOU,EAAGE,cAAcD,GAE1B,KAAKrB,EAASY,OACZ,OAAOQ,EAAGG,OAASF,EAAGE,OAExB,QACE,OAAO,MAITnB,GACFc,EAAaX,UAIfiB,QAAQC,IAAIpB,EAAUD,GAEfc,EAsCeQ,CAAkBzB,EAAiBa,KAAKX,OAE5D,OACE,sBAAKwB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASd,KAAKL,eACdoB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYzB,IAAaL,EAASU,WALxC,iCAWA,wBACEkB,QAASd,KAAKH,aACdkB,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYzB,IAAaL,EAASY,SALxC,4BAWA,wBACEgB,QAASd,KAAKP,QACdsB,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAa1B,IALnB,qBAWCW,GACC,wBACEa,QAASd,KAAKD,MACdgB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAtFpC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.92259aaa.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n// To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      ...state,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlhpabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const resetHidden = isReversed || sortType !== SortType.NONE;\n    const sortedGoods = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortByAlhpabet}\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {resetHidden && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {sortedGoods.map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}