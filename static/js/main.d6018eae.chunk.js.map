{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","setState","sortByAlhpabet","sortByLength","reset","this","resetHidden","className","onClick","type","classNames","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,gHAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAmBK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAGNC,EAAY,YAAOH,GAsBzB,OApBAG,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKT,EAASY,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OAExB,QACE,OAAO,MAITR,GACFC,EAAaQ,UAIfC,QAAQC,IAAIZ,EAAUC,GAEfC,G,SA3CJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA8CE,IAAMiB,EAAb,4MACEC,MAAe,CACbb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEL,QAAU,WACR,EAAKM,UAAS,SAACF,GAAD,mBAAC,eACVA,GADS,IAEZb,YAAaa,EAAMb,iBATzB,EAaEgB,eAAiB,WACf,EAAKD,SAAS,CACZhB,SAAUJ,EAASU,YAfzB,EAmBEY,aAAe,WACb,EAAKF,SAAS,CACZhB,SAAUJ,EAASY,UArBzB,EAyBEW,MAAQ,WACN,EAAKH,SAAS,CACZf,YAAY,EACZD,SAAUJ,EAASmB,QA5BzB,4CAgCE,WACE,MAAiCK,KAAKN,MAA9Bb,EAAR,EAAQA,WAAYD,EAApB,EAAoBA,SACdqB,EAAcpB,GAAcD,IAAaJ,EAASmB,KAExD,OACE,sBAAKO,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAASH,KAAKH,eACdO,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYzB,IAAaJ,EAASU,WALxC,iCAWA,wBACEiB,QAASH,KAAKF,aACdM,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,WAAYzB,IAAaJ,EAASY,SALxC,4BAWA,wBACEe,QAASH,KAAKV,QACdc,KAAK,SACLF,UAAWG,IACT,oBACA,CAAE,YAAaxB,IALnB,qBAWEoB,GACA,wBACEE,QAASH,KAAKD,MACdK,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGxB,EAAkBD,EAAiBuB,KAAKN,OAAOY,KAAI,SAAAC,GAAI,OACtD,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eArFpC,GAAyBC,IAAMC,WC7D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6018eae.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n// To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state: State) => ({\n      ...state,\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlhpabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const resetHidden = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            onClick={this.sortByAlhpabet}\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            onClick={this.sortByLength}\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n          >\n            Sort by length\n          </button>\n\n          <button\n            onClick={this.reverse}\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n          >\n            Reverse\n          </button>\n\n          {(resetHidden) && (\n            <button\n              onClick={this.reset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {getReorderedGoods(goodsFromServer, this.state).map(good => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}